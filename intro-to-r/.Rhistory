list.of.packages <- c("psych", "rstatix","dplyr","DT","ggplot2","GGally","table1","lmtest","stargazer","car","RColorBrewer","remotes","report")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
suppressPackageStartupMessages({
library(psych)
library(rstatix)
library(dplyr)
library(DT)
library(ggplot2)
library(GGally)
library(table1)
library(lmtest)
library(stargazer)
library(car)
library(RColorBrewer)
library(report)})
theme_set(theme_light())
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
scores <- sat.act
# scores <-read.csv("sat.act.csv") # does not work in this case as you don't have a .csv file
# ?sat.act
head(scores)
#View(scores)
nrow(scores) #To check the number of rows
ncol(scores) #To check the number of columns
str(scores)
datatable(scores)
typeof(scores$gender)
scores$gender <- as.factor(scores$gender)
is.factor(scores$gender)
# Step 1: Change the data format to charachter
scores$gender <- as.character(scores$gender)
# Step 2: Replace "1" with "men" and "2" with "women"
scores$gender[scores$gender=="1"] <- "Men"
scores$gender[scores$gender=="2"] <- "Women"
# Step 3: Change the data format back to factor
scores$gender <- as.factor(scores$gender)
# Step 4: Check levels for `gender`
levels(scores$gender)
table(scores$gender)
table(scores$gender, scores$education)
get_summary_stats(scores)
scores %>%
group_by(gender) %>%
get_summary_stats(ACT)
table1::table1(~education + age + ACT + SATV + SATQ | gender, data = scores)
scores %>%
ggplot(aes(x=ACT)) +
geom_histogram(aes(y = stat(density)), binwidth=2, color="black", fill="lightblue") +
stat_function(fun = dnorm, args = list(mean = mean(scores$ACT),
sd = sd(scores$ACT)),size=1)+
geom_vline(aes(xintercept = mean(ACT)), color="red") +
labs(title="Histogram of ACT scores with a Normal Curve", x="ACT score", y="Percent of observations")
m1 <- t.test(scores$ACT,mu = 27,
alternative = c("two.sided"),
conf.level = 0.95)
m1
report(m1)
scores %>%
ggplot(aes(fill=gender, x=gender)) +
geom_bar(aes(y=stat(count)/sum(count)))+
geom_text(aes(label = round(stat(count)/sum(count),2),y=stat(count)/sum(count)),
stat="count", position = position_stack(vjust = 0.5), size=5) +
scale_fill_brewer(palette = "Dark2")+
labs(title="Share of observations by gender",y="Percent of observations",x="Gender",fill="Gender")
m2 <- chisq.test(table(scores$gender), p = c(0.36,0.64))
m2
scores %>%
ggplot(aes(x=gender, y=SATV, fill=gender))+
geom_boxplot(outlier.size=1)+
stat_summary(fun=mean, geom="point", shape=5, size=4)+
scale_fill_brewer(palette = "Dark2")+
labs(title="Boxplots of SAT Verbal scores by gender",x="Gender",
y="SAT Verbal scores",fill="Gender")
scores %>%
ggplot(aes(x=SATV, fill=gender))+
geom_density(alpha=0.5)+
scale_fill_brewer(palette = "Dark2")+
labs(title="Density plots of SAT Verbal scores by gender",
x="SAT Verbal scores", fill="Gender")
m3 <- t.test(scores$SATV ~ scores$gender, var.eq = TRUE)
m3
report(m3)
scores %>%
ggplot(aes(x=education, y=SATV, fill=education))+
geom_boxplot(outlier.size=1)+
labs(title="Boxplots of SAT Verbal scores by education level",
x="Levels of education", y="SAT Verbal scores",fill="Education")
m4 <- aov(scores$SATV ~ scores$education)
summary(m4)
report(m4)
Tukey_ANOVA_SATV_ed <- TukeyHSD(aov(scores$SATV ~ scores$education), conf.level=.95)
